HTML과 ASP가 다른점 
ASP는 서버에서 돌아가기때문에
모든 HTML의 속성안에 ID값을 넣어주어야 한다.

-----------------------------------------
항상 시작하기전에
Windows 검색 > iis에서 
오른쪽에 <시작>이 되어있는지 확인
하고 비쥬얼 스튜디오 실행
-----------------------------------------
프로젝트 새로만들기

C# > 웹 이전버전 > ASP.NET 빈 웹 사이트 >
프레임워크 4.5.1버전 으로 생성

새항목 추가 
Web Form > 다른 파일에 코드 입력(코드숨김)

-----------------------------------------
코드 숨김 페이지 모델

.asp : 표현부분(Display)
.asp.cs : 코드부분(Logic)


단일 파일 페이지 모델

.asp 
<script runat="server">
//내부 로직
</script>

-----------------------------------------
ex01 (코드 숨김 페이지 모델)
※대/소문자 구별!!!

<%@ Page Language="C#" AutoEventWireup="true" CodeFile="ex01.aspx.cs" 
Inherits="ex01" %>

<!-- Language : 해당언어 설정 -->
<!-- AutoEventWireup : 해당 페이지가 연결되면 자동으로 해당파일과 연결하라 -->
<!-- CodeFile : 자동으로 연결되는 파일 -->
<!-- Inherits : 상속자 이름 -->


해당 소스들이 무조건적으로 적혀있어야 함
AutoEventWireup:false 일 경우,
동작하도록 다른 코드를 작성해주어야 한다.

-----------------------------------------
환경설정

도구 > 옵션 > 텍스트 편집기 > 모든언어 >
일반 > 자동 줄 바꿈(체크)

-----------------------------------------
ex11 (단일 페이지 모델)

페이지 로딩할때 발생 가능한 이벤트
>> Load

> script부분에 자동코딩된다.

<!-- 페이지 로딩 시,
자동으로 실행되는 함수 -->
<script runat="server">

protected void Page_Load
(object sender, EventArgs e)
{
        Response.Write
("처음 페이지를 출력 합니다.");
}

</script>

-----------------------------------------
차이점 :

코드 숨김 페이지의 경우는
C#이기 때문에 맨 위에 using space를
적어주어야 한다.
(.cs파일은 C#파일)

단일 페이지의 경우는 asp파일이기 때문에
굳이 적어줄 필요가 없다.
(aspx파일은 안에 엔진이 내장되어있다)

단일 페이지 모델 장점

- 웹 폼 분석이 쉽다.

단점 

- 개발자와 디자이너 간의 혼선을 줄 수있다

코드 숨김 페이지 모델 장점

- 개발자의 코드작성 + 웹 디자이너 작업
병행이 가능하다

- 개발자와 디자이너 혼선을 줄일 수 있다

-----------------------------------------
using Ststem.Ling 오류

NET.CRL 버전 : v.4.0
파이프라인 모드 : 클래식

해당 설정을 해야 오류를 없앨 수 있다

-----------------------------------------
웹 폼의 주요 이벤트 (순서 외워야한다.)

PreInit (초기화 전 처리)
Init (초기화)
InitComplete (초기화 완료 확인)
PreLoad (페이지 로딩하기 전 처리)
Load (로딩)
LoadComplete (로딩 완료 확인)
PreRender (응답처리 불러들이기)
SaveStateComplete (응답처리 저장)
Unload (종료 - HTTP통신(비연결형)때문에 사용)

-----------------------------------------
페이지 요청 시
> HTTP처리기를 통해 해당 Page 이벤트를 불러와
HTTP처리기를 통해 페이지 응답한다.

이벤트 처리 순서
Init > Load > Control Events > PreRender >
Unload

-----------------------------------------
중간고사 나온다!

Unload
>> 함수가 생성되는 순간에 asp연결이
끊켜버린다.
함수 안에 명령문이 적혀있을 경우 
이미 연결이 끊켜버린 뒤라서 오류가 발생한다.

-----------------------------------------
ASP.NET의 기본

다시 게시 (postback)
> 자신의 웹페이지를 다시 게시함
(웹페이지의 새로고침과 같은 방식)

페이지 간 게시 (cross-page posting)
>특정 웹페이지에서 다른 웹페이지를
POST 방식으로 요청

중간고사
postback를 처리하려면 어떻게 해야하는가?
>다시 게시

cross-page방식으로 처리하시오.
>

-----------------------------------------
단일 페이지 모델 작업시(Form 작업 시)

도구상자 (보기 > 도구상자 > 표준)

원하는 속성 더블클릭 시, 자동 생성된다.

-----------------------------------------







































